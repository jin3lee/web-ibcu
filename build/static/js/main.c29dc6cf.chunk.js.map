{"version":3,"sources":["Pages/HomePage/HomePage.js","Components/PageDimensions/actionTypes.js","Components/PageDimensions/PageDimensions.js","Components/PageDimensions/actions.js","Container/actionTypes.js","Container/RootContainer.js","App.js","serviceWorker.js","Components/PageDimensions/reducer.js","Container/reducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["HomePage","className","style","homePageStyle","background","React","Component","backgroundColor","UPDATE_SITE_WIDTH","UPDATE_SITE_HEIGHT","PageDimensions","props","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","updateSiteDimensionsAction","innerWidth","innerHeight","setState","connect","ownProps","pageDimensions","dispatch","type","updateSiteWidth","updateSiteHeight","UPDATE_PAGE","ADD_RANDOM_FISH_TANK_FEEDER","RootContainer","console","log","rootContainerStyle","rootContainer","pageId","App","Boolean","location","hostname","match","initialState","roomList","roomName","roomId","tankLists","tankName","foodCapacityLevel","lastFeedInHours","nextFeedInHours","combineReducers","payload","tankList","push","createStore","rootReducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c29dc6cf.chunk.js","sourcesContent":["import React from \"react\";\n\n// import './../styles.css';\n// import Header from './../../Components/Header.js';\n// import Footer from './../../Components/Footer.js';\n\n// import Kickstarter from './components/Kickstarter.js';\n// import StartQuote from './components/StartQuote.js';\n\nclass HomePage extends React.Component {\n\n  /*NOT AVAILABLE FEATURES*/\n  // <Kickstarter />\n  // <RegisterNewsLetter />\n\n  render() {\n    // console.log(\"width: \" + this.props.moduleWidth + \"  and height: \" + this.props.moduleHeight);\n    // <div style={{ background: 'linear-gradient(to bottom,  rgb(0, 0, 0) , rgb(0, 0, 60))' }}>\n    //   <Footer />\n    // </div>\n    return(\n      <div className=\"root-container-background\" style={ style.homePageStyle }>\n          <div style={{ background: 'linear-gradient(to bottom, rgb(0, 0, 60), rgb(0, 0, 0))' }}>\n          \n          </div>\n      </div>\n    );\n  }\n}\n\nconst style = {\n  homePageStyle:{\n    backgroundColor: \"#1A9AED\",\n  },\n}\nexport default HomePage;\n","export const UPDATE_SITE_WIDTH = \"UPDATE_SITE_WIDTH\";\nexport const UPDATE_SITE_HEIGHT = \"UPDATE_SITE_HEIGHT\";\n","import React from \"react\";\n\nimport { connect } from 'react-redux';\nimport { updateSiteWidth, updateSiteHeight } from './actions.js'\n\n// PaigeDimensions is a listener\n// PaigeDimensions is NOT a visual component, but rather listens for window resizing.\n// It will dispatch the new dimensions of the window so that all the other\n// components will be able to optional rescale with the new \"width\" & \"height\"\nclass PageDimensions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.props.updateSiteDimensionsAction( window.innerWidth, window.innerHeight );\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  render() {\n    return(\n      null\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    pageDimensions: state.pageDimensions,\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return ({\n  \tupdateSiteDimensionsAction: ( width, height ) => {\n  \t\tdispatch(updateSiteWidth( width ));\n      dispatch(updateSiteHeight( height ));\n  \t},\n  })\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( PageDimensions );\n","import { UPDATE_SITE_WIDTH, UPDATE_SITE_HEIGHT } from \"./actionTypes\";\n\nexport const updateSiteWidth = width => {\n  return ( {\n    type: UPDATE_SITE_WIDTH,\n    width: width,\n  });\n}\n\nexport const updateSiteHeight = height => (\n  {\n    type: UPDATE_SITE_HEIGHT,\n    height: height,\n  }\n);\n","export const PAGE_ID_HOME = \"PAGE_ID_HOME\";\nexport const PAGE_ID_SIGN_UP = \"PAGE_ID_SIGN_UP\";\nexport const PAGE_ID_LOGIN_IN = \"PAGE_ID_LOGIN_IN\";\nexport const PAGE_ID_ADMIN = \"PAGE_ID_ADMIN\";\nexport const UPDATE_PAGE = \"UPDATE_PAGE\";\nexport const ADD_RANDOM_FISH_TANK_FEEDER = \"ADD_RANDOM_FISH_TANK_FEEDER\";\n","import React from \"react\";\n\nimport { connect } from 'react-redux';\n\n// components\nimport HomePage from './../Pages/HomePage/HomePage.js';\n\n// listeners\nimport PageDimensions from './../Components/PageDimensions/PageDimensions.js';\nimport { PAGE_ID_HOME } from './actionTypes';\n\nclass RootContainer extends React.Component {\n  render() {\n    console.log(\"pageDimensions: \", this.props);\n    return(\n      <div className=\"root-container-background\" style={ style.rootContainerStyle }>\n\n          <PageDimensions />\n\n          { (this.props.rootContainer.pageId === PAGE_ID_HOME) && <HomePage /> }\n\n      </div>\n    );\n  }\n}\n\nconst style = {\n  rootContainerStyle:{\n    backgroundColor: \"#1A9AED\",\n  },\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    rootContainer: state.rootContainer,\n    pageDimensions: state.pageDimensions,\n  };\n};\n\nexport default connect( mapStateToProps )( RootContainer );\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport RootContainer from \"./Container/RootContainer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <RootContainer />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { UPDATE_SITE_WIDTH, UPDATE_SITE_HEIGHT } from \"./actionTypes\";\n\nconst initialState = {\n\twidth: null,\n  height: null,\n}\n\nexport default function reducer( state = initialState, payload ) {\n\tswitch ( payload.type ) {\n\t\tcase UPDATE_SITE_WIDTH: {\n\t\t\treturn { ...state, width: payload.width };\n\t\t}\n\n\t\tcase UPDATE_SITE_HEIGHT: {\n\t\t\treturn { ...state, height: payload.height }\n\t\t}\n\n    default: {\n      return { ...state }\n    }\n\t}\n}\n","import { PAGE_ID_HOME, UPDATE_PAGE, ADD_RANDOM_FISH_TANK_FEEDER } from \"./actionTypes\";\n\nconst initialState = {\n\tpageId: PAGE_ID_HOME,\n\troomList:\n\t[\n\t\t{roomName: 'Living Room', roomId: 0},\n\t\t{roomName: 'Kitchen', roomId: 1},\n\t\t{roomName: 'Garage', roomId: 2},\n\t],\n\ttankLists:\n\t[\n\t\t{\n\t\t\ttankName: 'tank1',\n\t\t\troomId: 0,\n\t\t\tfoodCapacityLevel: 90,\n\t\t\tlastFeedInHours: 2,\n\t\t\tnextFeedInHours: 5,\n\t\t},\n\t\t{\n\t\t\ttankName: 'tank2',\n\t\t\troomId: 1,\n\t\t\tfoodCapacityLevel: 30,\n\t\t\tlastFeedInHours: 10,\n\t\t\tnextFeedInHours: 1,\n\t\t},\n\t\t{\n\t\t\ttankName: 'tank3',\n\t\t\troomId: 2,\n\t\t\tfoodCapacityLevel: 0,\n\t\t\tlastFeedInHours: 100,\n\t\t\tnextFeedInHours: -1,\n\t\t},\n\t\t{\n\t\t\ttankName: 'tank4',\n\t\t\troomId: 0,\n\t\t\tfoodCapacityLevel: 100,\n\t\t\tlastFeedInHours: 1,\n\t\t\tnextFeedInHours: 12,\n\t\t},\n\t],\n}\n\nexport default function reducer( state = initialState, payload ) {\n\tswitch ( payload.type ) {\n\t\tcase UPDATE_PAGE: {\n\t\t\treturn { ...state, pageId: payload.pageId };\n\t\t}\n\t\tcase ADD_RANDOM_FISH_TANK_FEEDER: {\n\t\t\tvar tankList = state.tankLists;\n\t\t\ttankList.push({\n\t\t\t\ttankName: payload.tankName,\n\t\t\t\troomId: payload.roomId,\n\t\t\t\tfoodCapacityLevel: payload.foodCapacityLevel,\n\t\t\t\tlastFeedInHours: payload.lastFeedInHours,\n\t\t\t\tnextFeedInHours: payload.nextFeedInHours\n\t\t\t});\n\t\t\treturn { ...state, tankLists: tankList }\n\t\t}\n    default: {\n      return { ...state }\n    }\n\t}\n}\n","import { combineReducers } from 'redux'\n\nimport pageDimensions from './../../Components/PageDimensions/reducer'\nimport rootContainer from './../../Container/reducer'\n\nexport default combineReducers({\n\tpageDimensions,\n\trootContainer,\n})\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={ store }>\n    {\n      <App />\n    }\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}